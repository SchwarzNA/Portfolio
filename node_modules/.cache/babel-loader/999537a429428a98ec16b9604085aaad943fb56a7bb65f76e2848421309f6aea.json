{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jocelyn Nicolas\\\\Documents\\\\Timothy\\\\College\\\\5th Year - 2st Sem\\\\RubyOnRails\\\\Portfolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport AppRouter from './AppRouter';\nimport './styles.css'; // import the global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [theme, setTheme] = useState('light');\n\n  // Toggle between 'light' and 'dark'\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  return (\n    /*#__PURE__*/\n    // Apply a class to the top-level div based on the theme\n    _jsxDEV(\"div\", {\n      className: `App ${theme}`,\n      children: /*#__PURE__*/_jsxDEV(AppRouter, {\n        theme: theme,\n        toggleTheme: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AppRouter","jsxDEV","_jsxDEV","App","_s","theme","setTheme","toggleTheme","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jocelyn Nicolas/Documents/Timothy/College/5th Year - 2st Sem/RubyOnRails/Portfolio/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport AppRouter from './AppRouter';\nimport './styles.css'; // import the global styles\n\nconst App = () => {\n  const [theme, setTheme] = useState('light');\n\n  // Toggle between 'light' and 'dark'\n  const toggleTheme = () => {\n    setTheme((prev) => (prev === 'light' ? 'dark' : 'light'));\n  };\n\n  return (\n    // Apply a class to the top-level div based on the theme\n    <div className={`App ${theme}`}>\n      {/*\n        Pass theme and toggleTheme down to AppRouter so\n        Navbar (inside AppRouter) can access them.\n      */}\n      <AppRouter theme={theme} toggleTheme={toggleTheme} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACA,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAEE,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAC3D,CAAC;EAED;IAAA;IACE;IACAN,OAAA;MAAKO,SAAS,EAAE,OAAOJ,KAAK,EAAG;MAAAK,QAAA,eAK7BR,OAAA,CAACF,SAAS;QAACK,KAAK,EAAEA,KAAM;QAACE,WAAW,EAAEA;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;AAEV,CAAC;AAACV,EAAA,CAlBID,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAoBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}